{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ellis\\\\Programming\\\\CS_361\\\\MVP\\\\client\\\\src\\\\pages\\\\TrigRatios.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Row, Container, Stack, Tooltip, Button, OverlayTrigger } from \"react-bootstrap\";\nimport { React, useState } from \"react\";\nimport Triangle from \"../components/Triangle.PNG\";\nimport SCTFormulas from \"../components/SCTFormulas.js\";\nimport TriangleDimensions from \"../components/TriangleDimensions\";\nimport AnswerBox from \"../components/AnswerBox\";\nimport Hints from \"../components/Hints\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TrigRatios() {\n  _s();\n\n  const [triangle, setTriangle] = useState({});\n\n  const tooltip = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"button-tooltip\",\n    ...props,\n    children: \"Be careful - you will not be able to return to this exact problem.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n\n  const generateProblem = async () => {\n    const res = await fetch(\"/trig-ratios-new\", {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    const triangle = await res.json();\n    setTriangle(triangle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trigonometric Ratios Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Triangle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(SCTFormulas, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TriangleDimensions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 6,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AnswerBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 3,\n          offset: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          gap: 5,\n          children: [/*#__PURE__*/_jsxDEV(Hints, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            placement: \"left\",\n            overlay: tooltip,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              children: \"Give me a new problem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TrigRatios, \"g3JdH+h8ze7wVJG3Uny+b7YGJ6I=\");\n\n_c = TrigRatios;\n;\nexport default TrigRatios;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrigRatios\");","map":{"version":3,"sources":["C:/Users/ellis/Programming/CS_361/MVP/client/src/pages/TrigRatios.js"],"names":["Col","Row","Container","Stack","Tooltip","Button","OverlayTrigger","React","useState","Triangle","SCTFormulas","TriangleDimensions","AnswerBox","Hints","TrigRatios","triangle","setTriangle","tooltip","props","generateProblem","res","fetch","method","headers","json","span","offset"],"mappings":"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","sourcesContent":["import { Col, Row, Container, Stack, Tooltip, Button, OverlayTrigger } from \"react-bootstrap\";\r\nimport { React, useState } from \"react\";\r\nimport Triangle from \"../components/Triangle.PNG\";\r\nimport SCTFormulas from \"../components/SCTFormulas.js\";\r\nimport TriangleDimensions from \"../components/TriangleDimensions\";\r\nimport AnswerBox from \"../components/AnswerBox\";\r\nimport Hints from \"../components/Hints\";\r\n\r\nfunction TrigRatios( ) {\r\n\r\n    const[triangle, setTriangle] = useState({});\r\n\r\n    const tooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n            Be careful - you will not be able to return to this exact problem.\r\n        </Tooltip>\r\n    )\r\n\r\n    const generateProblem = async () => {\r\n        const res = await fetch(\"/trig-ratios-new\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            },\r\n        });\r\n        const triangle = await res.json();\r\n        setTriangle(triangle);\r\n\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <h1>Trigonometric Ratios Practice</h1>\r\n            <Row>\r\n                <Col sm={8}><img src={Triangle} /></Col>\r\n                <Col sm={4}>\r\n                    <Stack gap={4}>\r\n                        <SCTFormulas></SCTFormulas>\r\n                        <br></br>\r\n                        <TriangleDimensions></TriangleDimensions>\r\n                    </Stack>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={{ span: 6, offset: 1 }}>\r\n                    <AnswerBox></AnswerBox>\r\n                </Col>\r\n                <Col sm={{ span: 3, offset: 1 }}>\r\n                    <Stack gap={5}>\r\n                        <Hints></Hints>\r\n                        <OverlayTrigger   \r\n                            placement=\"left\"\r\n                            overlay={tooltip}\r\n                        >\r\n                            <Button variant=\"warning\">Give me a new problem</Button>\r\n                        </OverlayTrigger>\r\n                    </Stack>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default TrigRatios;"]},"metadata":{},"sourceType":"module"}