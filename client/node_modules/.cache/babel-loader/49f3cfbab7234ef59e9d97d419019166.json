{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ellis\\\\Programming\\\\CS_361\\\\MVP\\\\client\\\\src\\\\components\\\\AnswerBox.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { Form, Button, Toast, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AnswerBox(_ref) {\n  _s();\n\n  let {\n    triangle\n  } = _ref;\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n\n  const toggleShowToast = () => setShowToast(!showToast); //let triangleData = JSON.parse(triangle);\n\n\n  const checkAnswer = event => {\n    event.preventDefault();\n    let correctAnswer = triangle.answer;\n\n    if (userAnswer <= correctAnswer + 0.1 && userAnswer >= correctAnswer - 0.1) {\n      setAnswerMessage(\"Correct! Try another problem!\");\n    } else if (userAnswer === \"\") {\n      setAnswerMessage(\"Please enter an answer.\");\n    } else {\n      setAnswerMessage(\"Incorrect. Please try again!\");\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: checkAnswer,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Solve for\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: triangle.solveFor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"in degrees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          placeholder: \"Round to 1 decimal. (e.g. 10.3)\",\n          type: \"number\",\n          step: \"0.1\",\n          min: \"0\",\n          max: \"1000\",\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Please enter a numeric value with up to 1 decimal.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: toggleShowToast,\n          children: \"Check your Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Toast, {\n          show: showToast,\n          onClose: toggleShowToast,\n          children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: answerMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnswerBox, \"26YmnKCo1TDyur85udkUl++m+m0=\");\n\n_c = AnswerBox;\n;\nexport default AnswerBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerBox\");","map":{"version":3,"sources":["C:/Users/ellis/Programming/CS_361/MVP/client/src/components/AnswerBox.js"],"names":["React","useState","Form","Button","Toast","Row","Col","AnswerBox","triangle","answerMessage","setAnswerMessage","userAnswer","setUserAnswer","showToast","setShowToast","toggleShowToast","checkAnswer","event","preventDefault","correctAnswer","answer","solveFor","e","target","value"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,GAAnC,QAA8C,iBAA9C;;;AAEA,SAASC,SAAT,OAAkC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,eAAe,GAAG,MAAMD,YAAY,CAAC,CAACD,SAAF,CAA1C,CAL8B,CAO9B;;;AAEA,QAAMG,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAIC,aAAa,GAAGX,QAAQ,CAACY,MAA7B;;AAEA,QAAIT,UAAU,IAAIQ,aAAa,GAAG,GAA9B,IAAqCR,UAAU,IAAIQ,aAAa,GAAG,GAAvE,EAA4E;AACxET,MAAAA,gBAAgB,CAAC,+BAAD,CAAhB;AACH,KAFD,MAEO,IAAIC,UAAU,KAAK,EAAnB,EAAuB;AAC1BD,MAAAA,gBAAgB,CAAC,yBAAD,CAAhB;AACH,KAFM,MAEA;AACHA,MAAAA,gBAAgB,CAAC,8BAAD,CAAhB;AACH;;AAAA;AACJ,GAZD;;AAcA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEM,WAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eACe;AAAA,+CAEP;AAAA,sBAAMR,QAAQ,CAACa;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFO;AAAA;AAAA;AAAA;AAAA;AAAA,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,QAAQ,MADZ;AAEI,UAAA,WAAW,EAAC,iCAFhB;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,IAAI,EAAC,KAJT;AAKI,UAAA,GAAG,EAAC,GALR;AAMI,UAAA,GAAG,EAAC,MANR;AAOI,UAAA,KAAK,EAAEV,UAPX;AAQI,UAAA,QAAQ,EAAEW,CAAC,IAAIV,aAAa,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AARhC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAmCI;AAAA;AAAA;AAAA;AAAA,YAnCJ,eAoCI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC,IAAV;AAAA,gCACI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAET,eAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,KAAD;AACI,UAAA,IAAI,EAAEF,SADV;AAEI,UAAA,OAAO,EAAEE,eAFb;AAAA,iCAII,QAAC,KAAD,CAAO,IAAP;AAAA,sBAAaN;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuDH;;GA9EQF,S;;KAAAA,S;AA8ER;AAED,eAAeA,SAAf","sourcesContent":["import { React, useState } from \"react\";\r\nimport { Form, Button, Toast, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction AnswerBox ({ triangle }) {\r\n    const [answerMessage, setAnswerMessage] = useState(\"\");\r\n    const [userAnswer, setUserAnswer] = useState(\"\");\r\n    const [showToast, setShowToast] = useState(false);\r\n\r\n    const toggleShowToast = () => setShowToast(!showToast);\r\n\r\n    //let triangleData = JSON.parse(triangle);\r\n\r\n    const checkAnswer = (event) => {\r\n        event.preventDefault();\r\n\r\n        let correctAnswer = triangle.answer;\r\n\r\n        if (userAnswer <= correctAnswer + 0.1 && userAnswer >= correctAnswer - 0.1) {\r\n            setAnswerMessage(\"Correct! Try another problem!\")\r\n        } else if (userAnswer === \"\") {\r\n            setAnswerMessage(\"Please enter an answer.\")\r\n        } else {\r\n            setAnswerMessage(\"Incorrect. Please try again!\")\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={checkAnswer}>\r\n            <br></br>\r\n            <Row className=\"align-items-center\">\r\n                <Col>\r\n                    <Row></Row><h3>\r\n                        Solve for \r\n                        <div>{triangle.solveFor}</div>\r\n                    </h3>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"align-items-center\">\r\n                <Col md={2}>\r\n                    Answer\r\n                </Col>\r\n                <Col md={2}>\r\n                    <Form.Text className=\"text-muted\">\r\n                        in degrees\r\n                    </Form.Text></Col>\r\n                <Col md={7}>\r\n                    <Form.Control\r\n                        required\r\n                        placeholder=\"Round to 1 decimal. (e.g. 10.3)\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        max=\"1000\"\r\n                        value={userAnswer}\r\n                        onChange={e => setUserAnswer(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a numeric value with up to 1 decimal.\r\n                    </Form.Control.Feedback>\r\n                </Col>\r\n            </Row>\r\n            <br></br>\r\n            <Row>\r\n                <Col size=\"lg\">\r\n                    <Button \r\n                        type=\"submit\"\r\n                        onClick={toggleShowToast}\r\n                        >\r\n                        Check your Answer\r\n                    </Button>\r\n                    <Toast \r\n                        show={showToast}\r\n                        onClose={toggleShowToast}\r\n                        >\r\n                        <Toast.Body>{answerMessage}</Toast.Body>\r\n                    </Toast>\r\n                </Col>\r\n            </Row> \r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default AnswerBox;"]},"metadata":{},"sourceType":"module"}