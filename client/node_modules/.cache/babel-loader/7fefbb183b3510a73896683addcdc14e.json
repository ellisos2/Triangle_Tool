{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ellis\\\\Programming\\\\CS_361\\\\MVP\\\\triangle-tool\\\\src\\\\components\\\\AnswerBox.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { Form, Button, Table, Toast } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AnswerBox() {\n  _s();\n\n  const [answerMessage, setAnswerMessage] = useState(\"\");\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [showToast, setShowToast] = useState(false);\n\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  const checkAnswer = () => {\n    const correctAnswer = 53.1; //setUserAnswer(userAnswer);\n\n    if (userAnswer <= correctAnswer + 0.1 && userAnswer >= correctAnswer - 0.1) {\n      setAnswerMessage(\"Correct! Try another problem!\");\n    } else {\n      setAnswerMessage(\"Incorrect. Please try again!\");\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    size: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: checkAnswer,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: \"Solve for angle b (in degrees)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Answer =\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mx-auto\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                placeholder: \"Round to 1 decimal. (e.g. 10.3)\",\n                type: \"number\",\n                min: \"0\",\n                max: \"180\",\n                value: userAnswer,\n                onChange: e => setUserAnswer(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please enter a numeric value with up to 1 decimal.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: toggleShowToast,\n              children: \"Check Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Toast, {\n              show: showToast,\n              onClose: toggleShowToast,\n              children: /*#__PURE__*/_jsxDEV(Toast.Body, {\n                children: answerMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnswerBox, \"26YmnKCo1TDyur85udkUl++m+m0=\");\n\n_c = AnswerBox;\n;\nexport default AnswerBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerBox\");","map":{"version":3,"sources":["C:/Users/ellis/Programming/CS_361/MVP/triangle-tool/src/components/AnswerBox.js"],"names":["React","useState","useEffect","Form","Button","Table","Toast","AnswerBox","answerMessage","setAnswerMessage","userAnswer","setUserAnswer","showToast","setShowToast","toggleShowToast","checkAnswer","correctAnswer","e","target","value"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,iBAA3C;;;AAEA,SAASC,SAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,eAAe,GAAG,MAAMD,YAAY,CAAC,CAACD,SAAF,CAA1C;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACtB,UAAMC,aAAa,GAAG,IAAtB,CADsB,CAEtB;;AACA,QAAIN,UAAU,IAAIM,aAAa,GAAG,GAA9B,IAAqCN,UAAU,IAAIM,aAAa,GAAG,GAAvE,EAA4E;AACxEP,MAAAA,gBAAgB,CAAC,+BAAD,CAAhB;AAEH,KAHD,MAGO;AACHA,MAAAA,gBAAgB,CAAC,8BAAD,CAAhB;AACH;;AAAA;AACJ,GATD;;AAWA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEM,WAAhB;AAAA,8BACI;AAAA,+BACI;AAAA,iCACI;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,mCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,SAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,OAAN;AACI,gBAAA,QAAQ,MADZ;AAEI,gBAAA,WAAW,EAAC,iCAFhB;AAGI,gBAAA,IAAI,EAAC,QAHT;AAII,gBAAA,GAAG,EAAC,GAJR;AAKI,gBAAA,GAAG,EAAC,KALR;AAMI,gBAAA,KAAK,EAAEL,UANX;AAOI,gBAAA,QAAQ,EAAEO,CAAC,IAAIN,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV;AAPhC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAWI,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,gBAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAuBI;AAAA,iCACI;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,oCACI,QAAC,MAAD;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,OAAO,EAAEL,eAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAOI,QAAC,KAAD;AACI,cAAA,IAAI,EAAEF,SADV;AAEI,cAAA,OAAO,EAAEE,eAFb;AAAA,qCAII,QAAC,KAAD,CAAO,IAAP;AAAA,0BAAaN;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqDH;;GAvEQD,S;;KAAAA,S;AAuER;AAED,eAAeA,SAAf","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport { Form, Button, Table, Toast } from \"react-bootstrap\";\r\n\r\nfunction AnswerBox () {\r\n    const [answerMessage, setAnswerMessage] = useState(\"\");\r\n    const [userAnswer, setUserAnswer] = useState(\"\");\r\n    const [showToast, setShowToast] = useState(false);\r\n\r\n    const toggleShowToast = () => setShowToast(!showToast);\r\n\r\n    const checkAnswer = () => {\r\n        const correctAnswer = 53.1;\r\n        //setUserAnswer(userAnswer);\r\n        if (userAnswer <= correctAnswer + 0.1 && userAnswer >= correctAnswer - 0.1) {\r\n            setAnswerMessage(\"Correct! Try another problem!\")\r\n        \r\n        } else {\r\n            setAnswerMessage(\"Incorrect. Please try again!\")\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Table size=\"sm\">\r\n            <Form onSubmit={checkAnswer}>\r\n                <thead>\r\n                    <tr>\r\n                        <th colSpan=\"2\">\r\n                            Solve for angle b (in degrees)\r\n                        </th>\r\n                    </tr>\r\n                </thead> \r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            Answer =\r\n                        </td>\r\n                        <td>\r\n                            <Form.Label className=\"mx-auto\">\r\n                                <Form.Control\r\n                                    required\r\n                                    placeholder=\"Round to 1 decimal. (e.g. 10.3)\"\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    max=\"180\"\r\n                                    value={userAnswer}\r\n                                    onChange={e => setUserAnswer(e.target.value)}\r\n                                    >\r\n                                </Form.Control>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please enter a numeric value with up to 1 decimal.\r\n                                </Form.Control.Feedback>\r\n                            </Form.Label>  \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <Button \r\n                                type=\"submit\"\r\n                                onClick={toggleShowToast}\r\n                                >\r\n                                Check Answer\r\n                            </Button>\r\n                            <Toast \r\n                                show={showToast}\r\n                                onClose={toggleShowToast}\r\n                                >\r\n                                <Toast.Body>{answerMessage}</Toast.Body>\r\n                            </Toast>\r\n                        </td>   \r\n                    </tr>\r\n                </tbody>\r\n            </Form>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default AnswerBox;"]},"metadata":{},"sourceType":"module"}